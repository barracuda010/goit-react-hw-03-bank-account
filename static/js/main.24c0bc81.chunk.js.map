{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js","components/Controls/Controls.module.css","components/Balance/Balance.module.css"],"names":["module","exports","Controls","state","amount","handleChange","e","setState","target","name","value","onDeposit","props","onWithdraw","this","className","s","controls","input","min","type","onChange","button","onClick","Component","Balance","income","expenses","balance","balance__span","TransactionHistory","items","transaction__history","transaction__list","map","id","date","key","transaction__item","toast","configure","Messages","enough","incorrect","getSumFrom","transactions","reduce","acc","el","Dashboard","addTransaction","actList","shortid","generate","Date","toLocaleString","prevState","saveTransactions","localStorage","getItem","JSON","parse","saveBalance","prevProps","setItem","stringify","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24c0bc81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__list\":\"TransactionHistory_transaction__list__2hHcQ\",\"transaction__history\":\"TransactionHistory_transaction__history__3_bdF\",\"transaction__item\":\"TransactionHistory_transaction__item__17ICi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1oR1i\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Controls.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onDeposit = () => {\n    const { onDeposit } = this.props;\n    const { amount } = this.state;\n\n    onDeposit(+amount);\n    this.setState({\n      amount: '',\n    });\n  };\n\n  onWithdraw = () => {\n    const { onWithdraw } = this.props;\n    const { amount } = this.state;\n\n    onWithdraw(+amount);\n    this.setState({\n      amount: '',\n    });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <>\n        <section className={s.controls}>\n          <input\n            className={s.input}\n            min=\"0\"\n            type=\"text\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n          <button className={s.button} type=\"button\" onClick={this.onDeposit}>\n            Deposit\n          </button>\n          <button className={s.button} type=\"button\" onClick={this.onWithdraw}>\n            Withdraw\n          </button>\n        </section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Balance.module.css';\n\nconst Balance = ({ income, expenses, balance }) => (\n  <>\n    <section className={s.balance}>\n      <span className={s.balance__span}>&#8593; {income}$</span>\n      <span className={s.balance__span}>&#8595; {expenses}$</span>\n      <span className={s.balance__span}>Balance: {balance}$</span>\n    </section>\n  </>\n);\nBalance.propTypes = {\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <>\n    <table className={s.transaction__history}>\n      <thead>\n        <tr className={s.transaction__list}>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, date }) => (\n          <tr key={id} className={s.transaction__item}>\n            <td>{type}</td>\n            <td>{amount}$</td>\n            <td>{date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n);\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport shortid from 'shortid';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport s from './Dashboard.module.css';\n\ntoast.configure();\nconst Messages = {\n  enough: 'На счету недостаточно средств для проведения операции!',\n  incorrect: 'Введите сумму для проведения операции!',\n};\nconst getSumFrom = (type, transactions) =>\n  transactions.reduce((acc, el) => {\n    return el.type === type ? acc + el.amount : acc;\n  }, 0);\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const saveTransactions = localStorage.getItem('transactions');\n    if (saveTransactions) {\n      this.setState({ transactions: JSON.parse(saveTransactions) });\n    }\n    const saveBalance = localStorage.getItem('balance');\n    if (saveBalance) {\n      this.setState({ balance: JSON.parse(saveBalance) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n    if (prevState.balance !== balance) {\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  addTransaction = (type, amount) => {\n    const actList = {\n      id: shortid.generate(),\n      type,\n      amount,\n      date: new Date().toLocaleString(),\n    };\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, actList],\n    }));\n  };\n\n  onDeposit = amount => {\n    if (amount === '' || amount <= 0) {\n      toast(Messages.incorrect);\n      return;\n    }\n\n    this.addTransaction('Deposit', amount);\n    this.setState(state => ({ balance: state.balance + amount }));\n  };\n\n  onWithdraw = amount => {\n    if (amount === '' || amount <= 0) {\n      toast(Messages.incorrect);\n      return;\n    }\n    if (this.state.balance < amount) {\n      toast(Messages.enough);\n      return;\n    }\n    this.addTransaction('Withdraw', amount);\n    this.setState(state => ({ balance: state.balance - amount }));\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    const income = getSumFrom('Deposit', transactions);\n    const expenses = getSumFrom('Withdraw', transactions);\n    return (\n      <div className={s.dashboard}>\n        <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory items={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3UFqd\",\"input\":\"Controls_input__2GUzq\",\"button\":\"Controls_button__1sco2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__k_RZf\",\"balance__span\":\"Balance_balance__span__2ucvb\"};"],"sourceRoot":""}